C51 COMPILER V6.12  LCD_DRIVER                                                             08/04/2013 11:37:18 PAGE 1   


C51 COMPILER V6.12, COMPILATION OF MODULE LCD_DRIVER
OBJECT MODULE PLACED IN .\LCD_driver.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\LCD_driver.c DEBUG OBJECTEXTEND

stmt level    source

   1          #include"STC_NEW_8051.h"
   2          #include"LCD_driver.h"
   3          //#include"chinese.h"
   4          //#include"char.h"
   5          
   6          uint16 colors[]=
   7          {
   8            0xf800,0x07e0,0x001f,0xffe0,0x0000,0x07ff,0xf81f,0xffff  //颜色数据
   9          };
  10          
  11          
  12          void LCD_Init(void)
  13          {
  14   1      
  15   1          LCD_REST=1;
  16   1      	    delaymsLCD(5);	
  17   1      		LCD_REST=0;
  18   1      		delaymsLCD(5);
  19   1      		LCD_REST=1;
  20   1      		delaymsLCD(5);
  21   1      	
  22   1      		LCD_CS =0;  //打开片选使能
  23   1      	
  24   1      	LCD_Write_COM(0x00,0x10); LCD_Write_DATA(0x00,0x00); // Power Control 1  current consumption  STB		      
             -                                                                                                                        
             -                                                                                                                        
             - 
  25   1      	delaymsLCD(10);
  26   1      	
  27   1      	LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x00,0x1c); // Power Control 2 		                               
             -                                                                                                                        
             -                                                                                                    
  28   1      	LCD_Write_COM(0x00,0x12); LCD_Write_DATA(0x12,0x12); // Power Control 3  BT2-0, DC11-10, DC21-20, DC31-30
             - 	
  29   1      	
  30   1      		                                                                                                        
             -                                                                                                                        
             -            
  31   1      	LCD_Write_COM(0x00,0x13); LCD_Write_DATA(0x00,0x41); // Power Control 4  DCR_EX=0, DCR2-0, GVD6-0  	
  32   1      			                                                                                                       
             -                                                                                                                        
             -             
  33   1      	LCD_Write_COM(0x00,0x14); LCD_Write_DATA(0x40,0x50); // Power Control 5  VCOMG=0, VCM6-0, VCMR=0, VML6-0 
             - 	
  34   1      			                                                                                                       
             -                                                                                                                        
             - 
  35   1      	LCD_Write_COM(0x00,0x10); LCD_Write_DATA(0x08,0x00); // Power Control 1 
  36   1      	
  37   1      			                                                                                                       
             -                                                                                                                        
             -                      
  38   1      	LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x01,0x1c); // Power Control 2
  39   1      		                                                                                                        
             -                                                                                                                        
C51 COMPILER V6.12  LCD_DRIVER                                                             08/04/2013 11:37:18 PAGE 2   

             -                             
  40   1      	delaymsLCD(300);//300ms		                                                                                
             -                                                                                                                        
             -                                                                                         
  41   1      	LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x03,0x1c); // Power Control 2
  42   1      		                                                                                                        
             -                                                                                                                        
             -                             
  43   1      	delaymsLCD(300);//300ms					                                                                             
             -                                                                                                                        
             -                                                                                            
  44   1      	LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x07,0x1c);  // Power Control 2
  45   1      		                                                                                                        
             -                                                                                                                        
             -                             
  46   1      	delaymsLCD(300);//300ms					                                                                             
             -                                                                                                                        
             -                                                                                            
  47   1      	LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x0f,0x1c);  // Power Control 2
  48   1      		                                                                                                        
             -                                                                                                                        
             -                             
  49   1      	delaymsLCD(40);//600ms					                                                                              
             -                                                                                                                        
             -                                                                                           
  50   1      	LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x0f,0x39);  // Power Control 2	                                
             -                                                                                                                        
             -                                                                                                     
  51   1      	delaymsLCD(60);//500ms				
  52   1      		
  53   1      	LCD_Write_COM(0x00,0x01); LCD_Write_DATA(0x01,0x28);  // Driver Output Control   
  54   1      			     
  55   1      	LCD_Write_COM(0x00,0x02); LCD_Write_DATA(0x01,0x00);  // LCD-Driving-Waveform Control  
  56   1      				                                                                                                      
             -                                                                                                                        
             -               
  57   1      	LCD_Write_COM(0x00,0x03); LCD_Write_DATA(0x10,0x30);  // Entry Mode  
  58   1      				                                                                                                      
             -                                                                                                                        
             -                                   
  59   1      	LCD_Write_COM(0x00,0x08); LCD_Write_DATA(0x08,0x08);  // Frame Cycle Control 
  60   1      				                                                                                                      
             -                                                                                                                        
             -                                               
  61   1      	LCD_Write_COM(0x00,0x0b); LCD_Write_DATA(0x11,0x05);  // Frame Cycle Control
  62   1      	                                                                                                         
             -                                                                                                                        
             -                
  63   1      	LCD_Write_COM(0x00,0x0c); LCD_Write_DATA(0x00,0x00);  // External Display Interface Control 
  64   1      	
  65   1      	
  66   1      	LCD_Write_COM(0x00,0x15); LCD_Write_DATA(0x00,0x20);   //VCI Recycling (R15H)		//		VCIR=010	 0X0020
  67   1      	
  68   1      	LCD_Write_COM(0x00,0x30); LCD_Write_DATA(0x00,0x00);   //		SCN 0	Start from G1	
  69   1      		                                                                                                        
             -                                                                                                                        
             -                                           
  70   1      	LCD_Write_COM(0x00,0x34); LCD_Write_DATA(0x01,0x3f);   //		SE1 = 100111111( 319)	
  71   1      		                                                                                                        
             -                                                                                                                        
             -                                       
  72   1      	LCD_Write_COM(0x00,0x35); LCD_Write_DATA(0x00,0x00);   //		SS1 = 000000000
C51 COMPILER V6.12  LCD_DRIVER                                                             08/04/2013 11:37:18 PAGE 3   

  73   1      		                                                                                                        
             -                                                                                                                        
             -                                             
  74   1      	LCD_Write_COM(0x00,0x36); LCD_Write_DATA(0x00,0xef);   //		HEA = 011101111(239)	
  75   1      		                                                                                                        
             -                                                                                                                        
             -                                       
  76   1      	
  77   1      	LCD_Write_COM(0x00,0x37); LCD_Write_DATA(0x00,0x00);   //		HSA = 000000000	
  78   1      		                                                                                                        
             -                                                                                                                        
             -                                             
  79   1      	
  80   1      	LCD_Write_COM(0x00,0x38); LCD_Write_DATA(0x01,0x3f);   //		VEA = 100111111( 319)
  81   1      		                                                                                                        
             -                                                                                                                        
             -                                       
  82   1      	
  83   1      	LCD_Write_COM(0x00,0x39); LCD_Write_DATA(0x00,0x00);  //		VSA = 000000000	
  84   1      	
  85   1      		                                                                                                        
             -                                                                                                                        
             -                                             
  86   1      	
  87   1      	LCD_Write_COM(0x00,0x50); LCD_Write_DATA(0x01,0x01);  // Gamma Control   
  88   1      			                                                                                                       
             -                                                                                                                        
             -                                                
  89   1      	LCD_Write_COM(0x00,0x51); LCD_Write_DATA(0x09,0x03);
  90   1      		                                                                                                        
             -                                                                                                                        
             -                                               
  91   1      	LCD_Write_COM(0x00,0x52); LCD_Write_DATA(0x0b,0x08);
  92   1      		                                                                                                        
             -                                                                                                                        
             -                                               
  93   1      	LCD_Write_COM(0x00,0x53); LCD_Write_DATA(0x08,0x05);
  94   1      		                                                                                                        
             -                                                                                                                        
             -                                               
  95   1      	LCD_Write_COM(0x00,0x54); LCD_Write_DATA(0x01,0x01);	
  96   1      		                                                                                                        
             -                                                                                                                        
             -                                               
  97   1      	LCD_Write_COM(0x00,0x55); LCD_Write_DATA(0x0d,0x06);
  98   1      		                                                                                                        
             -                                                                                                                        
             -                                               
  99   1      	LCD_Write_COM(0x00,0x56); LCD_Write_DATA(0x0e,0x0a);
 100   1      		                                                                                                        
             -                                                                                                                        
             -                                               
 101   1      	LCD_Write_COM(0x00,0x57); LCD_Write_DATA(0x01,0x00);
 102   1      		                                                                                                        
             -                                                                                                                        
             -                                               
 103   1      	LCD_Write_COM(0x00,0x58); LCD_Write_DATA(0x1f,0x0b);
 104   1      			                                                                                                       
             -                                                                                                                        
             -                                                
 105   1      	LCD_Write_COM(0x00,0x59); LCD_Write_DATA(0x02,0x01);
 106   1      			                                                                                                       
C51 COMPILER V6.12  LCD_DRIVER                                                             08/04/2013 11:37:18 PAGE 4   

             -                                                                                                                        
             -                                                
 107   1      	
 108   1      	LCD_Write_COM(0x00,0x20); LCD_Write_DATA(0x00,0x00);  //Set RAM Address
 109   1      		                                                                                                        
             -                                                                                                                        
             -                                             
 110   1      	
 111   1      	LCD_Write_COM(0x00,0x21); LCD_Write_DATA(0x00,0x00);  //Set RAM Address		                                
             -                                                                                                                        
             -                                                                                                                     
 112   1      	//0x22			RAM Data Write		
 113   1      	//LCD_CtrlWrite(0x0022);
 114   1      							                                                                                                   
             -                                                                                                                        
             -                                              
 115   1      	LCD_Write_COM(0x00,0x0f); LCD_Write_DATA(0x1f,0x01);   // Start Oscillation   
 116   1      	
 117   1          delaymsLCD(300);//300ms
 118   1      	LCD_Write_COM(0x00,0x07); LCD_Write_DATA(0x00,0x16);  // Display Control   		                            
             -                                                                                                                        
             -                                                                                                                     
 119   1      	delaymsLCD(32);//200ms
 120   1      	LCD_Write_COM(0x00,0x07); LCD_Write_DATA(0x00,0x17);
 121   1      	
 122   1      	LCD_CS =1; 
 123   1      }  
 124          
 125          
 126          
 127          
 128          void delaymsLCD(int count)  // /* X1ms */
 129          {
 130   1              int i,j;
 131   1              for(i=0;i<count;i++)
 132   1                      for(j=0;j<100;j++);
 133   1      }
 134          
 135          void LCD_Writ_Bus(char VH,char VL)   //并行数据写入函数
 136          {
 137   1          LCD_DataPortH=VH;	  //高位P1口
 138   1      	LCD_DataPortL=VL;	  //低位P0口	
 139   1      	LCD_WR=0;
 140   1      	LCD_WR=1; 
 141   1      }
 142          
 143          
 144          
 145          void LCD_Write_COM(char VH,char VL)	 //发送命令
 146          {	
 147   1          LCD_RS=0;
 148   1      	LCD_Writ_Bus(VH,VL);
 149   1      }
 150          
 151          
 152          void LCD_Write_DATA(char VH,char VL)	//发送数据
 153          {
 154   1          LCD_RS=1;
 155   1      	LCD_Writ_Bus(VH,VL);
 156   1      }
 157          
 158          
C51 COMPILER V6.12  LCD_DRIVER                                                             08/04/2013 11:37:18 PAGE 5   

 159          
 160          
 161          	void PantLCD(char VH,char VL)
 162          	{
 163   1      	int i,j;
 164   1      	LCD_CS =0;  //打开片选使能
 165   1      	Address_setLCD(0,0,239,319);
 166   1          for(i=0;i<320;i++)
 167   1      	 {
 168   2      	  for (j=0;j<240;j++)
 169   2      	   	{
 170   3              	 LCD_Write_DATA(VH,VL);
 171   3      	    }
 172   2      
 173   2      	  }
 174   1           LCD_CS =1;  //关闭片选使能
 175   1      }
 176          
 177          /********************************************************************************************
 178          	 DDA称为数值微分画线算法，是直线生成算法中最简单的一种。原理相当简单，就是最直观的根据斜率的
 179          	 偏移程度，决定是以x为步进方向还是以y为步进方向。然后在相应的步进方向上，步进变量每次增加一个
 180          	 像素，而另一个相关坐标变量则为Yk_1=Yk+m（以x为步进变量为例，m为斜率）
 181           ********************************************************************************************/
 182          
 183          void LCDLineDDA(int x0,int y0,int x1,int y1)
 184          {
 185   1      	float dy,dx,x,y,m;
 186   1      	LCD_CS=0;
 187   1          dx=x1-x0;
 188   1          dy=y1-y0;
 189   1          m=dy/dx;
 190   1          if(x0<x1)
 191   1          {
 192   2              if(m<=1&&m>=-1)
 193   2              {
 194   3                    y=y0;
 195   3                    for(x=x0;x<=x1;x++)
 196   3                    {
 197   4                         Address_setLCD(x,y+0.5,x+1,y+1+0.5);
 198   4      	               LCD_Write_DATA(0,255);
 199   4                        y+=m;
 200   4                    }
 201   3              }
 202   2          }
 203   1          if(x0>x1)
 204   1          {
 205   2              if(m<=1&&m>=-1)
 206   2              {
 207   3                    y=y0;
 208   3                    for(x=x0;x>=x1;x--)
 209   3                    {
 210   4                     	   Address_setLCD(x,y+0.5,x+1,y+1+0.5);
 211   4      	               LCD_Write_DATA(0,255);
 212   4                        y-=m;
 213   4                    }
 214   3              }
 215   2          }
 216   1          if(y0<y1)
 217   1          {
 218   2              if(m>=1||m<=-1)
 219   2              {
 220   3                    m=1/m;
C51 COMPILER V6.12  LCD_DRIVER                                                             08/04/2013 11:37:18 PAGE 6   

 221   3                    x=x0;
 222   3                    for(y=y0;y<=y1;y++)
 223   3                    {
 224   4                    
 225   4      				 Address_setLCD(x+0.5,y,x+1+0.5,y+1);
 226   4      	               LCD_Write_DATA(0,255);
 227   4                        x+=m;
 228   4                    }
 229   3              }
 230   2          }
 231   1          if(y0>y1)
 232   1          {
 233   2              if(m<=-1||m>=1)
 234   2              {
 235   3                    m=1/m;
 236   3                    x=x0;
 237   3                    for(y=y0;y>=y1;y--)
 238   3                    {
 239   4                   
 240   4      				   Address_setLCD(x+0.5,y,x+1+0.5,y+1);
 241   4      	               LCD_Write_DATA(0,255);
 242   4                        x-=m;
 243   4                    }
 244   3              }
 245   2          }
 246   1      	LCD_CS=1;
 247   1      }
 248          
 249          void Address_setLCD(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2)
 250          {  
 251   1          LCD_Write_COM(0x00,0x20);LCD_Write_DATA(x1>>8,x1);	  //设置X坐标位置
 252   1          LCD_Write_COM(0x00,0x21);LCD_Write_DATA(y1>>8,y1);   //设置Y坐标位置
 253   1      
 254   1      								 
 255   1      
 256   1          LCD_Write_COM(0x00,0x37);LCD_Write_DATA(x1>>8,x1);   //开始X
 257   1      	LCD_Write_COM(0x00,0x39);LCD_Write_DATA(y1>>8,y1);	  //开始Y
 258   1          LCD_Write_COM(0x00,0x36);LCD_Write_DATA(x2>>8,x2);   //结束X
 259   1      	LCD_Write_COM(0x00,0x38);LCD_Write_DATA(y2>>8,y2);   //结束Y
 260   1      
 261   1      	LCD_Write_COM(0x00,0x22);							 
 262   1      }
 263          
 264          
 265          /**********************************************************
 266          
 267            写汉字子函数
 268          
 269          **********************************************************/
 270          /*
 271          void ChineseChar(uint x,uint y,int size,uint For_color,uint Bk_color ,char c)
 272          {
 273             int e=0,i,j;
 274             int  ed;
 275             
 276             uint  ncols;
 277             uint  nrows;
 278             uint  nbytes;
 279          
 280             uchar *pfont;
 281             uchar *pchar;
 282             uchar *fonttable[]={(uchar *)hz16,(uchar *)hz24 , (uchar *)hz32};
C51 COMPILER V6.12  LCD_DRIVER                                                             08/04/2013 11:37:18 PAGE 7   

 283             
 284             pfont=(uchar *)fonttable[size];
 285          
 286             if(size==0)
 287             {
 288               ncols =16-1;
 289               nrows =16-1;
 290               nbytes =32;	 //(16*16)/8
 291             }
 292             else
 293             if(size==1)
 294             {
 295               ncols =24-1;
 296               nrows =24-1;
 297               nbytes =72;  //(24*24)/8
 298             }
 299             else
 300             if(size==2)
 301             {
 302               ncols =32-1;
 303               nrows =32-1;
 304               nbytes =132;   //(32*32)/8
 305             }
 306             
 307             pchar=pfont + (nbytes*(c-1));
 308          
 309             Address_setLCD(x,  y, x+nrows,y+ncols);
 310             
 311             for(i=0;i<nbytes;i++)
 312             {
 313               ed=*pchar++;
 314          	 if(size==0)
 315          	 {
 316                 if(i%2==0)
 317                 e=8;
 318                 else
 319                 e=4;
 320          	 }
 321          	 else
 322          	 e=8;
 323               
 324               for(j=0;j<e;j++)
 325               {// unsigned char temp;
 326          	  if((ed>>j)&0x01)
 327                { 
 328                 	//temp = 	For_color&0x00ff
 329          	   LCD_Write_DATA(For_color>>8 , For_color  );  //textcolor
 330          	  }
 331               else
 332               {
 333                 LCD_Write_DATA( Bk_color>>8 ,  Bk_color);  //backcolor
 334          	 }
 335          	}
 336            }
 337          }
 338          */
 339          /*********************************************************/
 340          
 341          /**********************************************************
 342          
 343            字符显示子函数
 344          
C51 COMPILER V6.12  LCD_DRIVER                                                             08/04/2013 11:37:18 PAGE 8   

 345          **********************************************************/
 346          /*
 347          void LCD_ShowChar(uint x,uint y,uint For_color,uint Bk_color, char ch)
 348          {       
 349             uchar temp , Bytes;
 350             uchar pos,t;
 351             uint  CHAR_W,CHAR_H;
 352          
 353             
 354             //CHAR_W = 8;         //8*16
 355             //CHAR_H = 16;
 356          
 357               CHAR_W = 16;         //16*24
 358               CHAR_H = 24;
 359          
 360             if(x>(LCD_SIZE_X-CHAR_W)||y>(LCD_SIZE_Y-CHAR_H))
 361             return;
 362             
 363             Address_setLCD(x, y, x+CHAR_W-1, y+CHAR_H-1);
 364             ch = ch-32;                       //按照ASCII编码顺序的到相应字母的编码
 365             Bytes = (CHAR_W*CHAR_H)/8;
 366             for(pos=0;pos<Bytes;pos++)  //CHAR_H 	(CHAR_W*CHAR_H)/8
 367             {
 368               // temp= Font8x16[ch][pos];
 369          
 370          	  //temp= Font16x24[ch][pos];
 371          	  temp= Font16x24[ch][pos];
 372                
 373                for(t=0;t<8;t++) //CHAR_W
 374                {                 
 375          	    if(temp&0x80)
 376          	    LCD_Write_DATA(For_color>>8 , For_color  );  //textcolor
 377          	    else 
 378          	    LCD_Write_DATA(Bk_color>>8 , Bk_color );  //backcolor
 379                  temp<<=1; 
 380                }
 381          	  
 382             }
 383          }  
 384          */
 385          /**********************************************************
 386           显示字符串子函数
 387          
 388           x,y:起点坐标  
 389           *p:字符串起始地址
 390          
 391          **********************************************************/
 392          /*
 393          void LCD_ShowString(uint x,uint y,uint For_color,uint Bk_color,char *p)
 394          {         
 395             while(*p!='\0')
 396             {       
 397               LCD_ShowChar(x,y,For_color,Bk_color,*p);
 398              // x+=8;
 399          	 x+=16;
 400               p++;
 401             }
 402          }		    */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2155    ----
C51 COMPILER V6.12  LCD_DRIVER                                                             08/04/2013 11:37:18 PAGE 9   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      36
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
