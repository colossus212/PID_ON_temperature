C51 COMPILER V6.12  PID                                                                    08/04/2013 00:57:15 PAGE 1   


C51 COMPILER V6.12, COMPILATION OF MODULE PID
OBJECT MODULE PLACED IN .\pid.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE .\pid.c DEBUG OBJECTEXTEND

stmt level    source

   1          #include"defines.h"
   2          #include"PID.h"
   3          const unsigned int MAXOUT=100;
   4          //================================================================
   5          // PID->H
   6          // Operation about PID algorithm procedure 
   7          // C51编译器  Keil 7.08
   8          //================================================================
   9          // 作者:zhoufeng
  10          // Date :2007-08-06
  11          // All rights reserved.
  12          //================================================================
  13          
  14          uint8        out ;                 // 加热输出
  15          uint8        count;               // 输出时间单位计数器
  16          /*********************************
  17          PID = Uk + KP*[E(k)-E(k-1)]+KI*E(k)+KD*[E(k)-2E(k-1)+E(k-2)];(增量型PID算式)
  18          函数入口: RK(设定值),CK(实际值),KP,KI,KD
  19          函数出口: U(K)
  20          //PID运算函数
  21          ********************************/
  22          void     PIDOperation (PIDValueStr *PID)  
  23          { 
  24   1      uint32       Temp[3];                                        //中间临时变量
  25   1      uint32       PostSum;                                       //正数和
  26   1      uint32       NegSum;                                       //负数和
  27   1      Temp[0] = 0;
  28   1      Temp[1] = 0;
  29   1      Temp[2] = 0;
  30   1      PostSum = 0;
  31   1      NegSum  = 0;
  32   1      if( PID->RK_Uint16 > PID->CK_Uint16 )                    //设定值大于实际值否？
  33   1      {
  34   2        if( PID->RK_Uint16 - PID->CK_Uint16 >100 )            //偏差大于10否？
  35   2        {
  36   3         PID->Uk_Uint16 = MAXOUT;    }                        //偏差大于10为上限幅值输出(全速加热)
  37   2        else
  38   2        {
  39   3         Temp[0] = PID->RK_Uint16 - PID->CK_Uint16;       //偏差<=10,计算E(k)
  40   3         PID->EkFlag_Uint8[1]=0;                        //E(k)为正数
  41   3         //数值移位
  42   3            PID->Ek_Uint32[2] = PID->Ek_Uint32[1];
  43   3            PID->Ek_Uint32[1] = PID->Ek_Uint32[0];
  44   3            PID->Ek_Uint32[0] = Temp[0];
  45   3      /****************************************/
  46   3            if( PID->Ek_Uint32[0] >PID->Ek_Uint32[1] )                            //E(k)>E(k-1)否？
  47   3            {
  48   4        Temp[0]=PID->Ek_Uint32[0] - PID->Ek_Uint32[1];           //E(k)>E(k-1)
  49   4              PID->EkFlag_Uint8[0]=0;  }                                       //E(k)-E(k-1)为正数
  50   3         else
  51   3      {
  52   4        Temp[0]=PID->Ek_Uint32[0] - PID->Ek_Uint32[1];        //E(k)<E(k-1)
  53   4              PID->EkFlag_Uint8[0]=1;  }                                               //E(k)-E(k-1)为负数
  54   3      /****************************************/
  55   3            Temp[2]=PID->Ek_Uint32[1]*2 ;                                             // 2E(k-1)
C51 COMPILER V6.12  PID                                                                    08/04/2013 00:57:15 PAGE 2   

  56   3      if( (PID->Ek_Uint32[0]+ PID->Ek_Uint32[2])>Temp[2] )            //E(k-2)+E(k)>2E(k-1)否？
  57   3            {
  58   4        Temp[2]=(PID->Ek_Uint32[0]+ PID->Ek_Uint32[2])-Temp[2];     //E(k-2)+E(k)>2E(k-1)
  59   4              PID->EkFlag_Uint8[2]=0;  }                                          //E(k-2)+E(k)-2E(k-1)为正数
  60   3         else
  61   3      {
  62   4        Temp[2]=Temp[2]-(PID->Ek_Uint32[0]+ PID->Ek_Uint32[2]);  //E(k-2)+E(k)<2E(k-1)
  63   4              PID->EkFlag_Uint8[2]=1;  }                                       //E(k-2)+E(k)-2E(k-1)为负数
  64   3      /****************************************/       
  65   3            Temp[0] = (uint32)PID->KP_Uint8 * Temp[0];                        // KP*[E(k)-E(k-1)]
  66   3            Temp[1] = (uint32)PID->KI_Uint8 * PID->Ek_Uint32[0];              // KI*E(k)
  67   3            Temp[2] = (uint32)PID->KD_Uint8 * Temp[2];                      // KD*[E(k-2)+E(k)-2E(k-1)]
  68   3      
  69   3      /*以下部分代码是讲所有的正数项叠加，负数项叠加*/     
  70   3      /**********KP*[E(k)-E(k-1)]**********/
  71   3      if(PID->EkFlag_Uint8[0]==0)
  72   3        PostSum += Temp[0];                                    //正数和
  73   3      else                                              
  74   3        NegSum += Temp[0];                                    //负数和
  75   3      /********* KI*E(k)****************/ 
  76   3      if(PID->EkFlag_Uint8[1]==0)      
  77   3        PostSum += Temp[1];                                 //正数和
  78   3      else
  79   3         ;                                                 //空操作，E(K)>0
  80   3      /****KD*[E(k-2)+E(k)-2E(k-1)]****/                           
  81   3      if(PID->EkFlag_Uint8[2]==0)
  82   3      PostSum += Temp[2];                               //正数和
  83   3      else
  84   3        NegSum += Temp[2];                             //负数和
  85   3      /***************U(K)***************/                             
  86   3      PostSum += (uint32)PID->Uk_Uint16;    
  87   3              
  88   3      if(PostSum > NegSum )                         // 是否控制量为正数
  89   3      { Temp[0] = PostSum - NegSum;
  90   4      if( Temp[0] < MAXOUT )                         //小于上限幅值则为计算值输出
  91   4      PID->Uk_Uint16 = (uint16)Temp[0];
  92   4      else
  93   4        PID->Uk_Uint16 = MAXOUT;                     //否则为上限幅值输出
  94   4      }
  95   3      else                                     //控制量输出为负数，则输出0(下限幅值输出)
  96   3         PID->Uk_Uint16 = 0;
  97   3      }
  98   2      }
  99   1      else 
 100   1      { PID->Uk_Uint16 = 0;  }
 101   1      
 102   1      }
 103          
 104          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    926    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
